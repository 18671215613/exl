<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.aptech.mapper.TReplyMapper">
    <resultMap id="BaseResultMap" type="cn.aptech.pojo.TReply">
        <id column="REPLY_ID" property="replyId" jdbcType="INTEGER"/>
        <result column="IP_ADDRESS" property="ipAddress" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="RESULT_CODE" property="resultCode" jdbcType="VARCHAR"/>
        <result column="USER_ID" property="userId" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.aptech.pojo.TReply" extends="BaseResultMap">
        <result column="CONTENT" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    REPLY_ID, IP_ADDRESS, CREATE_TIME, RESULT_CODE, USER_ID
  </sql>
    <sql id="Blob_Column_List">
    CONTENT
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.aptech.pojo.TReplyExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.aptech.pojo.TReplyExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_reply
        where REPLY_ID = #{replyId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_reply
    where REPLY_ID = #{replyId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.aptech.pojo.TReplyExample">
        delete from t_reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.aptech.pojo.TReply">
    insert into t_reply (REPLY_ID, IP_ADDRESS, CREATE_TIME, 
      RESULT_CODE, USER_ID, CONTENT
      )
    values (#{replyId,jdbcType=INTEGER}, #{ipAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{resultCode,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.aptech.pojo.TReply">
        insert into t_reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="replyId != null">
                REPLY_ID,
            </if>
            <if test="ipAddress != null">
                IP_ADDRESS,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="resultCode != null">
                RESULT_CODE,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="content != null">
                CONTENT,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="replyId != null">
                #{replyId,jdbcType=INTEGER},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="resultCode != null">
                #{resultCode,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.aptech.pojo.TReplyExample" resultType="java.lang.Integer">
        select count(*) from t_reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_reply
        <set>
            <if test="record.replyId != null">
                REPLY_ID = #{record.replyId,jdbcType=INTEGER},
            </if>
            <if test="record.ipAddress != null">
                IP_ADDRESS = #{record.ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.resultCode != null">
                RESULT_CODE = #{record.resultCode,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                USER_ID = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                CONTENT = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_reply
        set REPLY_ID = #{record.replyId,jdbcType=INTEGER},
        IP_ADDRESS = #{record.ipAddress,jdbcType=VARCHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        RESULT_CODE = #{record.resultCode,jdbcType=VARCHAR},
        USER_ID = #{record.userId,jdbcType=VARCHAR},
        CONTENT = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_reply
        set REPLY_ID = #{record.replyId,jdbcType=INTEGER},
        IP_ADDRESS = #{record.ipAddress,jdbcType=VARCHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        RESULT_CODE = #{record.resultCode,jdbcType=VARCHAR},
        USER_ID = #{record.userId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.aptech.pojo.TReply">
        update t_reply
        <set>
            <if test="ipAddress != null">
                IP_ADDRESS = #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="resultCode != null">
                RESULT_CODE = #{resultCode,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                CONTENT = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where REPLY_ID = #{replyId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.aptech.pojo.TReply">
    update t_reply
    set IP_ADDRESS = #{ipAddress,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      RESULT_CODE = #{resultCode,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where REPLY_ID = #{replyId,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="cn.aptech.pojo.TReply">
    update t_reply
    set IP_ADDRESS = #{ipAddress,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      RESULT_CODE = #{resultCode,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR}
    where REPLY_ID = #{replyId,jdbcType=INTEGER}
  </update>
    <select id="getTReplys" resultMap="BaseResultMap">
    select ply.* from t_reply as ply,t_result as sult where ply.result_code=sult.result_code and sult.suite_code=#{suiteCode} order by create_time desc limit #{startIndex},#{rows};
  </select>
    <select id="countTReply" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(ply.USER_ID) from t_reply as ply,t_result as sult where ply.result_code=sult.result_code and sult.suite_code=#{suiteCode} order by create_time desc;
  </select>
</mapper>